var M=Object.defineProperty,y=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var T=(e,n,t)=>n in e?M(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,V=(e,n)=>{for(var t in n||(n={}))v.call(n,t)&&T(e,t,n[t]);if(S)for(var t of S(n))O.call(n,t)&&T(e,t,n[t]);return e},w=(e,n)=>y(e,I(n));//! Utility: Get visible years between from and to (inclusive)
function B(e,n){const t=parseInt(e),i=parseInt(n);if(!t||!i||t>i)return[];const u=[];for(let r=t;r<=i;r++)u.push(r);return u}//! Utility: Get column labels for display mode
const R=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],E=["Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec"];function Y(e){return e==="monthly"?R:E}//! Utility: Get amount for a specific field, year, and label (month/quarter)
function j(e,n,t,i,u="monthly"){var r,o,l;if(u==="quarterly"&&["Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec"].includes(i)){const s=(((r=e==null?void 0:e[t])==null?void 0:r[i])||[]).find(m=>m.expense===n);if(s)return Number(s.amount)||0;const c={"Jan-Mar":["Jan","Feb","Mar"],"Apr-Jun":["Apr","May","Jun"],"Jul-Sep":["Jul","Aug","Sep"],"Oct-Dec":["Oct","Nov","Dec"]};let f=0;for(const m of c[i]){const x=(((o=e==null?void 0:e[t])==null?void 0:o[m])||[]).find(F=>F.expense===n);x&&(f+=Number(x.amount)||0)}return f}else{const s=(((l=e==null?void 0:e[t])==null?void 0:l[i])||[]).find(c=>c.expense===n);return s&&Number(s.amount)||0}}//! Safe number conversion utility
function k(e){return typeof e=="number"?e:e==null||e===""?0:Number(e)}//! Handler for cell edits (banquet-specific)
function C({year:e,label:n,expense:t,event:i,originalBanquetData:u,changedCells:r,banquetData:o,isSaved:l,isComponentReady:p}){var x,F,A,N;if(!p||!p.value){console.warn("Component not ready yet, skipping cell edit");return}if(!r||!r.value){console.error("changedCells ref is undefined");return}if(!o){console.error("banquetData is undefined");return}if(!l){console.error("isSaved ref is undefined");return}if(!u||!u.value){console.error("originalBanquetData ref is undefined");return}let s=i.target.innerText.replace(/,/g,"").trim();s===""&&(s="0.00"),s=(parseFloat(s)||0).toFixed(2);let f="0.00";const J=(((F=(x=u.value)==null?void 0:x[e])==null?void 0:F[n])||[]).find(d=>d.expense===t);if(J&&(f=parseFloat(J.amount).toFixed(2)),s!==f){l.value=!1;const d=r.value.findIndex(a=>a.year===e&&a.label===n&&a.expense===t);d!==-1?r.value[d].newValue=s:r.value.push({year:e,label:n,expense:t,newValue:s}),o[e]||(o[e]={});let g=o[e][n]||[];const h=g.findIndex(a=>a.expense===t);h!==-1?g=[...g.slice(0,h),w(V({},g[h]),{amount:parseFloat(s)}),...g.slice(h+1)]:g=[...g,{expense:t,amount:parseFloat(s)}],o[e][n]=g,(N=(A=o==null?void 0:o[e])==null?void 0:A[n])==null||N.find(a=>a.expense===t)}else r.value=r.value.filter(d=>!(d.year===e&&d.label===n&&d.expense===t)),r.value.length===0&&(l.value=!0)}//! Handler for cell input (banquet-specific, real-time formatting)
function U({year:e,label:n,expense:t,event:i,banquetData:u}){let r=i.target.innerText;r=r.replace(/[^\d.]/g,"");const o=r.split(".");if(o.length>2&&(r=o[0]+"."+o.slice(1).join("")),!r.includes(".")||o.length===2&&o[1].length===2){o.length===2&&o[1].length>2&&(r=o[0]+"."+o[1].substring(0,2));const s=(parseFloat(r)||0).toLocaleString("en-US",{minimumFractionDigits:0,maximumFractionDigits:2});if(s!==i.target.innerText){i.target.innerText=s;const c=document.createRange(),f=window.getSelection(),m=i.target.firstChild||i.target;c.setStart(m,m.textContent.length),c.collapse(!0),f.removeAllRanges(),f.addRange(c)}}else r!==i.target.innerText&&(i.target.innerText=r)}//! Handler for cell focus (banquet-specific, show raw value for editing)
function z({year:e,label:n,expense:t,event:i}){const r=i.target.innerText.replace(/,/g,"");i.target.innerText=r;const o=document.createRange(),l=window.getSelection();o.selectNodeContents(i.target),l.removeAllRanges(),l.addRange(o)}export{U as a,Y as b,j as c,C as d,B as g,z as h,k as t};
