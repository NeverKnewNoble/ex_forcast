var c=(t,r,e)=>new Promise((s,i)=>{var u=o=>{try{a(e.next(o))}catch(n){i(n)}},l=o=>{try{a(e.throw(o))}catch(n){i(n)}},a=o=>o.done?s(o.value):Promise.resolve(o.value).then(u,l);a((e=e.apply(t,r)).next())});import{x as p}from"./index-BIpqQg-E.js";function h(){return c(this,null,function*(){try{const t=yield fetch("/api/v2/method/ex_forcast.api.account_list.get_accounts",{method:"GET",headers:{"Content-Type":"application/json","X-Frappe-CSRF-Token":p()}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const r=yield t.json(),e=r.data||r;return e.success&&Array.isArray(e.results)?e.results.map(s=>s.name):(console.error("API returned error:",e.error),[])}catch(t){return console.error("Failed to fetch accounts:",t),[]}})}function _(){return c(this,null,function*(){try{const t=yield fetch("/api/v2/method/ex_forcast.api.expense_options.get_expense_field_options",{method:"GET",headers:{"Content-Type":"application/json","X-Frappe-CSRF-Token":p()}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const r=yield t.json(),e=r.data||r;return e.success?{hospitality_category:e.data.hospitality_category||[],cost_type:e.data.cost_type||[]}:(console.error("API returned error:",e.error),{hospitality_category:[],cost_type:[]})}catch(t){return console.error("Failed to fetch expense field options:",t),{hospitality_category:[],cost_type:[]}}})}export{_ as a,h as g};
