var c=(e,r,t)=>new Promise((s,i)=>{var p=o=>{try{a(t.next(o))}catch(n){i(n)}},u=o=>{try{a(t.throw(o))}catch(n){i(n)}},a=o=>o.done?s(o.value):Promise.resolve(o.value).then(p,u);a((t=t.apply(e,r)).next())});function y(){return c(this,null,function*(){try{const e=yield fetch("/api/v2/method/ex_forcast.api.account_list.get_accounts",{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const r=yield e.json(),t=r.data||r;return t.success&&Array.isArray(t.results)?t.results.map(s=>s.name):(console.error("API returned error:",t.error),[])}catch(e){return console.error("Failed to fetch accounts:",e),[]}})}function d(){return c(this,null,function*(){try{const e=yield fetch("/api/v2/method/ex_forcast.api.expense_options.get_expense_field_options",{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const r=yield e.json(),t=r.data||r;return t.success?{hospitality_category:t.data.hospitality_category||[],cost_type:t.data.cost_type||[]}:(console.error("API returned error:",t.error),{hospitality_category:[],cost_type:[]})}catch(e){return console.error("Failed to fetch expense field options:",e),{hospitality_category:[],cost_type:[]}}})}export{d as a,y as g};
